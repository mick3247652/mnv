import { Stream } from 'xstream';
export declare type Attributes = {
    id?: number;
    subject?: string;
    message: string;
    action?: string;
    payload?: any;
    delay?: number;
    sendAt?: Date;
    repeatEvery?: string | number;
    repeatCount?: number;
    endAt?: Date;
    priority?: -2 | -1 | 0 | 1 | 2;
    smallIcon?: string;
    sound?: string;
    vibrate?: string | null;
    lights?: string | null;
    autoClear?: boolean;
    onlyAlertOnce?: boolean;
    tickerText?: string;
    when?: Date;
    bigText?: string;
    bigStyleImageBase64?: string;
    bigStyleUrlImgage?: string;
    subText?: string;
    progress?: number;
    color?: string;
    number?: number;
    category?: 'alarm' | 'call' | 'email' | 'event' | 'progress' | 'reminder' | 'social';
    localOnly?: boolean;
};
export declare type DefaultCommand = {
    type: undefined;
} & Attributes;
export declare type CreateCommand = {
    type: 'create';
} & Attributes;
export declare type DeleteCommand = {
    type: 'delete';
    id: number;
};
export declare type DeleteAllCommand = {
    type: 'deleteAll';
};
export declare type ClearCommand = {
    type: 'clear';
    id: number;
};
export declare type ClearAllCommand = {
    type: 'clearAll';
};
export declare type Command = DefaultCommand | CreateCommand | DeleteCommand | DeleteAllCommand | ClearCommand | ClearAllCommand;
export declare type PressEvent = any;
export declare function notificationDriver(cmd$: Stream<Command>): Stream<PressEvent>;
