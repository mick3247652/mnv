"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var xstream_1 = require("xstream");
var react_1 = require("react");
var adapt_1 = require("@cycle/run/lib/adapt");
var scope_1 = require("./scope");
var context_1 = require("./context");
var ReactSource = /** @class */ (function () {
    function ReactSource(scope, selector, props$) {
        if (scope === void 0) { scope = new scope_1.Scope(); }
        if (selector === void 0) { selector = null; }
        if (props$ === void 0) { props$ = xstream_1.default.createWithMemory(); }
        this._scope = scope;
        this._selector = selector;
        this._props$ = props$;
        this._childScopes = new Map();
    }
    ReactSource.prototype.select = function (selector) {
        return new ReactSource(this._scope, selector, this._props$);
    };
    ReactSource.prototype.events = function (eventType) {
        if (this._selector === null) {
            return adapt_1.adapt(xstream_1.default.empty());
        }
        else {
            return adapt_1.adapt(this._scope.getHandler(this._selector, eventType));
        }
    };
    ReactSource.prototype.props = function () {
        return adapt_1.adapt(this._props$);
    };
    ReactSource.prototype.getChildScope = function (scopeId) {
        if (!this._childScopes.has(scopeId)) {
            this._childScopes.set(scopeId, new scope_1.Scope());
        }
        return this._childScopes.get(scopeId);
    };
    ReactSource.prototype.isolateSink = function (sink, scopeId) {
        var isolation = this.getChildScope(scopeId);
        return sink.map(function (elem) {
            return react_1.createElement(context_1.ScopeContext.Provider, { value: isolation }, elem);
        });
    };
    ReactSource.prototype.isolateSource = function (source, scopeId) {
        var isolation = this.getChildScope(scopeId);
        return new ReactSource(isolation);
    };
    return ReactSource;
}());
exports.ReactSource = ReactSource;
//# sourceMappingURL=ReactSource.js.map