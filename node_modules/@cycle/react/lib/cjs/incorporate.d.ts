import { PureComponent, Component, ComponentElement, InputHTMLAttributes, DetailedReactHTMLElement } from 'react';
import { Scope } from './scope';
declare type Props = {
    targetProps: any;
    targetRef: any;
    target: any;
    scope: Scope;
};
declare type State = {
    flip: boolean;
};
export declare class Incorporator extends PureComponent<Props, State> {
    constructor(props: Props);
    private selector;
    private unsubscribe;
    componentDidMount(): void;
    private incorporateHandlers;
    private materializeTargetProps;
    render(): DetailedReactHTMLElement<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> | ComponentElement<any, Component<any, import("react").ComponentState, any>>;
    componentWillUnmount(): void;
}
export declare function incorporate(type: any): import("react").ComponentType<any>;
export {};
