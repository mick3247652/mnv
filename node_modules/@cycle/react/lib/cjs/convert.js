"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = require("react");
var context_1 = require("./context");
var run_1 = require("@cycle/run");
var ReactSource_1 = require("./ReactSource");
var StreamRenderer_1 = require("./StreamRenderer");
function makeCycleReactComponent(run) {
    return /** @class */ (function (_super) {
        __extends(CycleReactComponent, _super);
        function CycleReactComponent(props) {
            var _this = _super.call(this, props) || this;
            _this.state = { source: null, sink: null };
            _this._subs = [];
            return _this;
        }
        CycleReactComponent.prototype.componentDidMount = function () {
            var _a = run(), source = _a.source, sink = _a.sink, events = _a.events, dispose = _a.dispose;
            source._props$._n(this.props);
            this._dispose = dispose;
            if (events) {
                this._subscribeToEvents(events);
            }
            this.setState({ source: source, sink: sink });
        };
        CycleReactComponent.prototype._subscribeToEvents = function (events) {
            var _this = this;
            if (!events)
                return;
            var _loop_1 = function (name_1) {
                if (!events[name_1])
                    return "continue";
                var handlerName = "on" + name_1[0].toUpperCase() + name_1.slice(1);
                this_1._subs.push(events[name_1].subscribe({
                    next: function (x) {
                        if (_this.props[handlerName])
                            _this.props[handlerName](x);
                    },
                }));
            };
            var this_1 = this;
            for (var name_1 in events) {
                _loop_1(name_1);
            }
        };
        CycleReactComponent.prototype.render = function () {
            var _a = this.state, source = _a.source, sink = _a.sink;
            if (!source || !sink)
                return null;
            return react_1.createElement(context_1.ScopeContext.Provider, { value: source._scope }, react_1.createElement(StreamRenderer_1.StreamRenderer, { stream: sink }));
        };
        CycleReactComponent.prototype.componentDidUpdate = function (prevProps) {
            if (!this.state.source)
                return;
            if (this.props === prevProps)
                return;
            this.state.source._props$._n(this.props);
        };
        CycleReactComponent.prototype.componentWillUnmount = function () {
            if (this._dispose)
                this._dispose();
            for (var _i = 0, _a = this._subs; _i < _a.length; _i++) {
                var sub = _a[_i];
                sub.unsubscribe();
            }
        };
        return CycleReactComponent;
    }(react_1.PureComponent));
}
exports.makeCycleReactComponent = makeCycleReactComponent;
function makeComponent(main, drivers, channel) {
    if (drivers === void 0) { drivers = null; }
    if (channel === void 0) { channel = 'react'; }
    if (drivers) {
        return makeCycleReactComponent(function () {
            var _a;
            var program = run_1.setup(main, __assign({}, drivers, (_a = {}, _a[channel] = function () { return new ReactSource_1.ReactSource(); }, _a)));
            var source = program.sources[channel];
            var sink = program.sinks[channel];
            var events = __assign({}, program.sinks);
            delete events[channel];
            for (var name_2 in events) {
                if (name_2 in drivers)
                    delete events[name_2];
            }
            var dispose = program.run();
            return { source: source, sink: sink, events: events, dispose: dispose };
        });
    }
    else {
        return makeCycleReactComponent(function () {
            var _a;
            var source = new ReactSource_1.ReactSource();
            var sinks = main((_a = {}, _a[channel] = source, _a));
            var events = __assign({}, sinks);
            delete events[channel];
            var sink = sinks[channel];
            return { source: source, sink: sink, events: events };
        });
    }
}
exports.makeComponent = makeComponent;
//# sourceMappingURL=convert.js.map