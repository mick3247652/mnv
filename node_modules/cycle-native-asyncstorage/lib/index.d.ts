import { Stream } from 'xstream';
export declare type ClearCommand = {
    type: 'clear';
};
export declare type SetItemCommand = {
    type: 'setItem';
    key: string;
    value: string;
};
export declare type MergeItemCommand = {
    type: 'mergeItem';
    key: string;
    value: string;
};
export declare type RemoveItemCommand = {
    type: 'removeItem';
    key: string;
};
export declare type MultiSetCommand = {
    type: 'multiSet';
    keyValuePairs: Array<[string, string]>;
};
export declare type MultiMergeCommand = {
    type: 'multiMerge';
    keyValuePairs: Array<[string, string]>;
};
export declare type MultiRemoveCommand = {
    type: 'multiRemove';
    keys: Array<string>;
};
export declare type Command = ClearCommand | SetItemCommand | MergeItemCommand | RemoveItemCommand | MultiSetCommand | MultiMergeCommand | MultiRemoveCommand;
export declare class AsyncStorageSource {
    constructor();
    getAllKeys(): Stream<string[]>;
    getItem(key: string): Stream<string>;
    multiGet(keys: Array<string>): Stream<[string, string][]>;
}
export declare function asyncStorageDriver(command$: Stream<Command>): AsyncStorageSource;
