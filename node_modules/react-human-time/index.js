"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = require("react");
var human = require('human-time');
var HumanTime = /** @class */ (function (_super) {
    __extends(HumanTime, _super);
    function HumanTime(props) {
        var _this = _super.call(this, props) || this;
        _this.state = _this.getStateFromProps(props);
        return _this;
    }
    HumanTime.prototype.getStateFromProps = function (props) {
        return {
            formattedTime: human(new Date(props.time))
                .replace(/minute/, 'min')
                .replace(/^.*second.*$/, 'now'),
        };
    };
    HumanTime.prototype.componentDidMount = function () {
        var _this = this;
        this._timer = setInterval(function () { return _this.setState(_this.getStateFromProps(_this.props)); }, this.props.period || 30e3);
    };
    HumanTime.prototype.componentWillUnmount = function () {
        clearInterval(this._timer);
    };
    HumanTime.prototype.render = function () {
        return this.state.formattedTime;
    };
    return HumanTime;
}(react_1.Component));
exports.default = HumanTime;
//# sourceMappingURL=index.js.map